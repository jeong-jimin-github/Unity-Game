name: Automated Build

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  buildWindows:
    name: Windows-64 Bit
    runs-on: windows-latest

    steps:
      - name: Clone repository
        run: |
          git clone --branch main https://${{ secrets.GITLAB_TOKEN }}@${{ secrets.GITLAB_URL }} source
          cd source
          git lfs pull

      - uses: actions/cache@v4
        with:
          path: source/Library
          key: Library-${{ hashFiles('source/Assets/**', 'source/Packages/**', 'source/ProjectSettings/**') }}
          restore-keys: |
            Library-

      - name: Build project
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          allowDirtyBuild: true
          projectPath: source
          targetPlatform: StandaloneWindows64

      - name: Check build output
        run: dir Build

      - name: Prepare build for release
        run: |
          cd Build/StandaloneWindows64
          # PowerShell 명령어로 실행 파일만 압축
          Compress-Archive -Path * -DestinationPath ../../Windows-Build.zip

      - name: Check available disk space
        run: Get-PSDrive

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: Windows Build
          path: Windows-Build.zip


  buildMac:
    name: MacOS-64 Bit
    runs-on: macos-13

    steps:
      - name: Clone repository
        run: |
          git clone --branch main ${{ secrets.URL }}.git source
          cd source
          git lfs pull

      - uses: actions/cache@v4
        with:
          path: source/Library
          key: Library-${{ hashFiles('source/Assets/**', 'source/Packages/**', 'source/ProjectSettings/**') }}
          restore-keys: |
            Library-

      - name: Build project
        uses: jeong-jimin-github/unity-builder@main
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          allowDirtyBuild: true
          projectPath: source
          targetPlatform: StandaloneOSX

      - name: Check build output
        run: ls -la Build

      - name: Prepare build for release
        run: |
          cd Build/StandaloneOSX
          # 실행 파일만 포함하도록 압축
          zip -r ../../MacOS-Build.zip *
          
      - name: Check available disk space
        run: df -h

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: MacOS Build
          path: MacOS-Build.zip

  createRelease:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [buildWindows, buildMac]
    steps:
      - name: Download Windows Build
        uses: actions/download-artifact@v4
        with:
          name: Windows Build
          path: windows

      - name: Download MacOS Build
        uses: actions/download-artifact@v4
        with:
          name: MacOS Build
          path: macos

      - name: Check available disk space
        run: df -h

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            windows/Windows-Build.zip
            macos/MacOS-Build.zip
          tag_name: v1.0.${{ github.run_number }}
          release_name: "Release v1.0.${{ github.run_number }}"
          body: "자동 생성된 Windows 및 MacOS 빌드"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
