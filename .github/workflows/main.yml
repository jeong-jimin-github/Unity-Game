name: Automated Build and Release ⭐

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  buildWindows:
    name: 💻 Windows-64 Bit
    runs-on: windows-latest

    steps:
      - name: Clone Gogs repository
        run: |
          git clone --branch master http://112.147.160.124:8080/Kuuhaku/Unity-Game.git source
          cd source
          git lfs pull

      - uses: actions/cache@v4
        with:
          path: source/Library
          key: Library-${{ hashFiles('source/Assets/**', 'source/Packages/**', 'source/ProjectSettings/**') }}
          restore-keys: |
            Library-

      - name: Build project
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          allowDirtyBuild: true
          projectPath: source
          targetPlatform: StandaloneWindows64
          buildPath: Build

      - name: Check build output
        run: ls -R Build

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: Windows Build
          path: Build

  createReleaseWithSHATag:
    name: 🚀 Create Release with SHA Tag
    needs: buildWindows
    runs-on: ubuntu-latest

    steps:
      - name: Set up Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Generate Tag from Commit SHA
        id: create_tag
        run: |
          # Get a short version of the current SHA
          short_sha=$(echo ${GITHUB_SHA:0:8})
          tag="sha-$short_sha" # Tag name with 'sha-' prefix
          echo "Generated tag: $tag"
          
          # Create and push the tag
          git fetch --prune --unshallow || true  # In case it's a shallow clone
          git tag $tag
          git push origin $tag

          # Save the generated tag to output
          echo "tag=$tag" >> $GITHUB_ENV

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: Windows Build
          path: Build

      - name: ⚡ Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.tag }}
          name: "Release for ${{ env.tag }}"
          body: "자동 생성된 빌드입니다."
          files: Build/**
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}