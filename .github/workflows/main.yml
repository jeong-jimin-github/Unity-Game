name: Automated Build and Release ⭐

on:
  push:
    branches: [ main ]

permissions:
  contents: write

jobs:
  buildWindows:
    name: 💻 Windows-64 Bit
    runs-on: windows-latest

    steps:
      - name: Clone Gogs repository
        run: |
          # 클론 및 LFS 풀링
          git clone --branch master http://112.147.160.124:8080/Kuuhaku/Unity-Game.git source
          cd source
          git lfs pull

      - uses: actions/cache@v4
        with:
          path: source/Library
          key: Library-${{ hashFiles('source/Assets/**', 'source/Packages/**', 'source/ProjectSettings/**') }}
          restore-keys: |
            Library-

      - name: Build project
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          allowDirtyBuild: true
          projectPath: source
          targetPlatform: StandaloneWindows64
          buildPath: Build

      - name: Check build output
        run: ls -R Build

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: Windows Build
          path: Build

  generateTagAndRelease:
    name: 🚀 Create Tag and Release
    needs: buildWindows
    runs-on: ubuntu-latest

    steps:
      - name: Set up Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Generate Tag
        id: create_tag
        run: |
          # 현재 시간 기반 태그 생성
          version=$(date +%Y%m%d-%H%M%S)  # 형식: yyyyMMdd-HHmmss
          echo "::set-output name=tag_name::v$version"

      - name: Push Tag to Repository
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          tag=${{ steps.create_tag.outputs.tag_name }}
          git tag $tag
          git push origin $tag

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: Windows Build
          path: Build

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: Build/**
          tag_name: ${{ steps.create_tag.outputs.tag_name }}
          release_name: "Release ${{ steps.create_tag.outputs.tag_name }}"
          body: "자동 생성된 빌드"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
